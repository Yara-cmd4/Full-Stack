{"version":3,"sources":["components/HomePage.js","components/Lottery.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","candidateNames","setCandidateNames","className","placeholder","onClick","candidateName","document","querySelector","name","value","push","length","lotteryButton","classList","remove","map","fetch","method","headers","body","JSON","stringify","then","r","json","Lottery","App","useState","useEffect","console","log","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wOAyEeA,MAxEf,SAAcC,GAEV,IAAMC,EAAiBD,EAAMC,eAEvBC,EAAoBF,EAAME,kBA6ChC,OAAO,sBAAKC,UAAU,iBAAf,UACH,sBAAKA,UAAU,YAAf,UACI,uBAAOA,UAAU,sBAAsBC,YAAY,uBACnD,wBAAQC,QAlChB,WAEQ,IAAIC,EAAgBC,SAASC,cAAc,wBACvCC,IAASH,GAAiBA,EAAcI,MAI5C,GAHAJ,EAAcI,MAAQ,GACtBT,EAAeU,KAAKF,GACpBP,EAAkBD,GACdA,EAAeW,QAAU,EAAG,CAC5B,IAAIC,EAAgBN,SAASC,cAAc,gBACzCK,GAAiBA,EAAcC,UAAUC,OAAO,UAyBtD,sBAGJ,qBAAKZ,UAAU,aAAf,SACKF,EAAee,KAAI,SAAAP,GAChB,OACI,qBAAKN,UAAU,iBAAf,SACKM,SAOjB,qBAAKN,UAAU,mBAAf,SACI,wBAAQE,QA5BhB,WACIY,MAAM,kBAAmB,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBACfC,KAAMC,KAAKC,UAAU,CAAErB,qBAEzBsB,MAAK,SAAAC,GAAC,OAAIA,EAAEC,WAqBf,mCC7DKC,MAPjB,WACI,OAAO,qBAAKvB,UAAU,kB,cCWX,SAASwB,IAAO,IAAD,EAEgBC,mBAAS,IAFzB,mBAErB3B,EAFqB,KAELC,EAFK,KAe5B,OAXA2B,qBAAU,WACRZ,MAAM,mBACHM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAtB,GACJ6B,QAAQC,IAAI9B,GACZC,EAAkBD,QAGrB,IAID,cAAC,IAAD,UACE,gCACE,qBAAKE,UAAU,WAAf,SACE,+BACE,oBAAIA,UAAU,aAAd,SACE,cAAC,IAAD,CAAM6B,GAAG,IAAT,6BAEF,oBAAI7B,UAAU,iBAAd,SACE,cAAC,IAAD,CAAM6B,GAAG,SAAT,4BAON,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SAEE,cAAC,EAAD,CAAMhC,eAAgBA,EAAgBC,kBAAmBA,cCjDrE,IAYegC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASsC,eAAe,SAM1BX,M","file":"static/js/main.da7fb551.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nfunction Home(props) {\r\n\r\n    const candidateNames = props.candidateNames;\r\n    // console.log(candidateNames)\r\n    const setCandidateNames = props.setCandidateNames;\r\n//     useEffect(() => {\r\n//     fetch('/set-candidate', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json'\r\n//         }, body: JSON.stringify({ name })\r\n//       })\r\n//         .then(r => r.json())\r\n//         .then(candidateNames => {\r\n//           console.log(candidateNames)\r\n//           setCandidateNames(candidateNames);\r\n//         });\r\n//    }, [])\r\n    function addCandidate() {\r\n        // useEffect(() => {\r\n            let candidateName = document.querySelector('.add-candidate-input');\r\n            let name = !!candidateName && candidateName.value;\r\n            candidateName.value = '';\r\n            candidateNames.push(name);\r\n            setCandidateNames(candidateNames);\r\n            if (candidateNames.length >= 5) {\r\n                let lotteryButton = document.querySelector('.lottery-btn');\r\n                !!lotteryButton && lotteryButton.classList.remove('hide');\r\n            }\r\n\r\n            // !!name && fetch('/add-candidate', {\r\n            //   method: 'POST',\r\n            //   headers: {\r\n            //     'Content-Type': 'application/json'\r\n            //   }, body: JSON.stringify({ name })\r\n            // })\r\n            //   .then(r => r.json());\r\n        // }, [])\r\n    }\r\n    function goToLottery() {\r\n        fetch('/add-candidates', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              }, body: JSON.stringify({ candidateNames })\r\n            })\r\n              .then(r => r.json());\r\n    }\r\n\r\n    return <div className='body add_input'>\r\n        <div className=\"add-input\">\r\n            <input className='add-candidate-input' placeholder=\"add candidate name\"></input>\r\n            <button onClick={addCandidate}> Add </button>\r\n        </div >\r\n\r\n        <div className='candidates'>\r\n            {candidateNames.map(name => {\r\n                return (\r\n                    <div className='candidate-name'>\r\n                        {name}\r\n                    </div>\r\n                );\r\n\r\n            })}\r\n        </div>\r\n\r\n        <div className=\"lottery-btn hide\">\r\n            <button onClick={goToLottery} > Go To Lottery </button>\r\n        </div >\r\n    </div>;\r\n}\r\n\r\nexport default Home;","function Lottery() {\r\n    return <div className='body lottery'>\r\n  \r\n  \r\n    </div>;\r\n  }\r\n\r\n  export default Lottery;","import './App.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Home from './components/HomePage';\r\nimport Lottery from './components/Lottery';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n\r\n  const [candidateNames, setCandidateNames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/get-candidates')\r\n      .then(r => r.json())\r\n      .then(candidateNames => {\r\n        console.log(candidateNames)\r\n        setCandidateNames(candidateNames);\r\n      });\r\n      \r\n  }, [])\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav className='all-tabs'>\r\n          <ul>\r\n            <li className='active-nav'>\r\n              <Link to=\"/\">Add Candidate</Link>\r\n            </li>\r\n            <li className='non-active-nav'>\r\n              <Link to=\"/about\">Lottery</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/lottery\">\r\n            <Lottery />\r\n          </Route>\r\n          <Route path=\"/\">\r\n\r\n            <Home candidateNames={candidateNames} setCandidateNames={setCandidateNames} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}