{"version":3,"sources":["components/Button.js","components/HomePage.js","components/Lottery.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","innerText","style","Home","candidateNames","setCandidateNames","className","placeholder","candidateName","document","querySelector","name","value","console","log","find","el","alert","length","lotteryButton","classList","remove","map","index","to","fetch","method","headers","body","JSON","stringify","then","r","json","data","Lottery","useState","selectedCandidates","setSelectedCandidates","candidates","candidateInfo","candidate","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0PASeA,MAPf,YAAgD,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,UAEtB,OAF2C,EAAVC,MAG7B,yBAAQF,QAASA,EAAjB,cAA6BC,EAA7B,QC2DOE,MA7Df,YAAsD,IAAtCC,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,kBAkC5B,OACI,sBAAKC,UAAU,iBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,uBAAOA,UAAU,sBAAsBC,YAAY,uBACnD,cAAC,EAAD,CAAQP,QApCpB,WAEI,IAAIQ,EAAgBC,SAASC,cAAc,wBACvCC,IAASH,GAAyC,IAAvBA,EAAcI,OAAgBJ,EAAcI,MAK3E,GAJAJ,EAAcI,MAAQ,GACtBC,QAAQC,IAAIN,GACZK,QAAQC,IAAIH,GAERP,EAAeW,MAAK,SAAAC,GAAE,OAAIA,IAAOL,KAGjC,OAFAM,MAAM,GAAD,OAAIN,EAAJ,sCACLE,QAAQC,IAAI,qBAGhB,GAAIV,EAAec,QAAU,EAAG,CAC5B,IAAIC,EAAgBV,SAASC,cAAc,gBACzCS,GAAiBA,EAAcC,UAAUC,OAAO,QAEtDR,QAAQC,IAAR,4BAAiCH,IACjCN,EAAkB,GAAD,mBAAKD,GAAL,CAAqBO,MAkBCV,UAAU,WAG7C,qBAAKK,UAAU,aAAf,SACKF,EAAekB,KAAI,SAACX,EAAMY,GACvB,OACI,qBAAiBjB,UAAU,iBAA3B,SACKK,GADKY,QAQtB,qBAAKjB,UAAU,mBAAf,SACI,cAAC,IAAD,CAAMkB,GAAG,WAAT,SACI,cAAC,EAAD,CAAQxB,QA/BxB,WACIyB,MAAM,kBAAmB,CACrBC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBACjBC,KAAMC,KAAKC,UAAU,CAAE1B,qBAEzB2B,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAG,GAAI,OAAIrB,QAAQC,IAAIoB,OAuBYjC,UAAU,2BChC7CkC,MArBf,WAAoB,IAAD,EAEmCC,mBAAS,IAF5C,mBAEVC,EAFU,KAEUC,EAFV,KAajB,OACE,sBAAKhC,UAAU,eAAf,UACE,cAAC,EAAD,CAAQN,QAZZ,WACEyB,MAAM,4BACHM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAG,GACJI,EAAsBJ,EAAKK,WAAWjB,KAAI,SAAAkB,GAAa,OAAIA,EAAc7B,aAQ3CV,UAAU,oBACzCoC,EAAmBf,KAAI,SAACmB,EAAWlB,GAAZ,OAAsB,kCAAiBkB,EAAjB,MAAQlB,U,OCT7C,SAASmB,IAAO,IAAD,EAEgBN,mBAAS,IAFzB,mBAErBhC,EAFqB,KAELC,EAFK,KAI5B,OACE,cAAC,IAAD,UAGI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsC,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,CAAMvC,eAAgBA,EAAgBC,kBAAmBA,WCxBrE,IAYeuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7C,SAAS8C,eAAe,SAM1BX,M","file":"static/js/main.c2ddd532.chunk.js","sourcesContent":["\r\n\r\nfunction Button({onClick, innerText, style=''}){\r\n\r\n    return(\r\n        <button onClick={onClick} > {innerText} </button>\r\n    );\r\n}\r\n\r\nexport default Button;","import { Link } from 'react-router-dom';\r\nimport Button from './Button';\r\n\r\nfunction Home({ candidateNames, setCandidateNames }) {\r\n\r\n    function addCandidate() {\r\n\r\n        let candidateName = document.querySelector('.add-candidate-input');\r\n        let name = !!candidateName && (candidateName.value != '') && candidateName.value;\r\n        candidateName.value = '';\r\n        console.log(candidateName);\r\n        console.log(name);\r\n\r\n        if (candidateNames.find(el => el === name)) {\r\n            alert(`${name} Already Exists in your list`);\r\n            console.log('before the return');\r\n            return;\r\n        }\r\n        if (candidateNames.length >= 4) {\r\n            let lotteryButton = document.querySelector('.lottery-btn');\r\n            !!lotteryButton && lotteryButton.classList.remove('hide');\r\n        }\r\n        console.log(`before the adding ${name}`);\r\n        setCandidateNames([...candidateNames, name]);\r\n    }\r\n\r\n    function goToLottery() {\r\n        fetch('/add-candidates', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }, body: JSON.stringify({ candidateNames })\r\n        })\r\n            .then(r => r.json())\r\n            .then(data => console.log(data));\r\n    }\r\n\r\n    return (\r\n        <div className='body add_input'>\r\n            <div className=\"add-input\">\r\n                <input className='add-candidate-input' placeholder=\"add candidate name\"></input>\r\n                <Button onClick={addCandidate} innerText='Add' />\r\n            </div >\r\n\r\n            <div className='candidates'>\r\n                {candidateNames.map((name, index) => {\r\n                    return (\r\n                        <div key={index} className='candidate-name'>\r\n                            {name}\r\n                        </div>\r\n                    );\r\n\r\n                })}\r\n            </div>\r\n\r\n            <div className=\"lottery-btn hide\">\r\n                <Link to=\"/lottery\" >\r\n                    <Button onClick={goToLottery} innerText=' Go To Lottery' /> \r\n                </Link>\r\n            </div >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","\r\nimport { useState } from \"react\";\r\nimport Button from './Button';\r\n\r\nfunction Lottery() {\r\n\r\n  const [selectedCandidates, setSelectedCandidates] = useState([]);\r\n  function getTwoWinners() {\r\n    fetch('/get-selected-candidates')\r\n      .then(r => r.json())\r\n      .then(data => {\r\n        setSelectedCandidates(data.candidates.map(candidateInfo => candidateInfo.name));\r\n      });\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='body lottery'>\r\n      <Button onClick={getTwoWinners} innerText='get Two Winners' />\r\n      {selectedCandidates.map((candidate, index) => <p key={index}> {candidate} </p>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Lottery;","import './App.css';\r\nimport React, { useState } from \"react\";\r\nimport Home from './components/HomePage';\r\nimport Lottery from './components/Lottery';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n\r\n  const [candidateNames, setCandidateNames] = useState([]);\r\n\r\n  return (\r\n    <Router>\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/lottery\">\r\n            <Lottery />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home candidateNames={candidateNames} setCandidateNames={setCandidateNames} />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}