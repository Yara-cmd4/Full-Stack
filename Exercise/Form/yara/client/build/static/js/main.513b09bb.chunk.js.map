{"version":3,"sources":["components/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","props","useState","user","Setuser","password","Setpassword","newuser","SetNewuser","newpassword","SetNewpassword","useEffect","document","getElementById","hidden","type","onChange","e","target","value","onClick","fetch","method","headers","body","JSON","stringify","then","r","json","data","console","log","id","App","className","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uOAwDeA,MAvDf,SAAkBC,GAAQ,IAAD,EACAC,qBADA,mBACdC,EADc,KACTC,EADS,OAEQF,qBAFR,mBAEdG,EAFc,KAELC,EAFK,OAGMJ,qBAHN,mBAGdK,EAHc,KAGNC,EAHM,OAIcN,qBAJd,mBAIdO,EAJc,KAIFC,EAJE,KAwCrB,OAnCAC,qBAAU,WACNC,SAASC,eAAe,YAAYC,OAAO,UAkCvC,gCACJ,uBAAOC,KAAK,OAAOC,SAAU,SAACC,GAC9Bb,EAAQa,EAAEC,OAAOC,UACjB,uBAAOJ,KAAK,WAAWC,SAAU,SAACC,GAClCX,EAAYW,EAAEC,OAAOC,UACrB,wBAAQC,QArCZ,WACIC,MAAM,SAAU,CACZC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAACvB,KAAKA,EAAKE,SAASA,MAExCsB,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACG,GACLC,QAAQC,IAAIF,MAEdC,QAAQC,IAAI7B,EAAKE,IAyBrB,oBACA,uBAAOU,KAAK,OAAOC,SAAU,SAACC,GAC9BT,EAAWS,EAAEC,OAAOC,UACpB,uBAAOJ,KAAK,WAAWC,SAAU,SAACC,GAClCP,EAAeO,EAAEC,OAAOC,UACxB,wBAAQC,QA5BZ,WACIR,SAASC,eAAe,YAAYC,OAAO,QAC3CO,MAAM,UAAW,CACbC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAACnB,QAAQJ,EAAKM,YAAYJ,MAE9CsB,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACG,GACLC,QAAQC,IAAIF,MAEdC,QAAQC,IAAIzB,EAAQE,GACpBG,SAASC,eAAe,YAAYC,OAAO,SAc/C,qBACA,uBAAOmB,GAAG,WAAV,oC,eCxCO,SAASC,IAKtB,OACE,cAAC,IAAD,UACE,gCACE,qBAAKC,UAAU,WAAf,SACE,+BACE,oBAAIA,UAAU,aAAd,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,6BAEF,oBAAID,UAAU,iBAAd,SACE,cAAC,IAAD,CAAMC,GAAG,SAAT,4BAON,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,aAGZ,cAAC,IAAD,CAAOA,KAAK,IAAZ,SAEE,cAAC,EAAD,cCvCZ,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,SAM1ByB,M","file":"static/js/main.513b09bb.chunk.js","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nfunction HomePage(props) {\r\n    const [user,Setuser]=useState();\r\n    const [password,Setpassword]=useState();\r\n    const [newuser,SetNewuser]=useState();\r\n    const [newpassword,SetNewpassword]=useState();\r\n    useEffect(()=>{\r\n        document.getElementById(\"Succeful\").hidden=\"true\";\r\n    })\r\n    function LogIn(){\r\n        fetch(\"/Login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({user:user,password:password}),\r\n          })\r\n            .then((r) => r.json())\r\n            .then((data) => {\r\n              console.log(data)\r\n            });\r\n            console.log(user,password);\r\n    }\r\n    function SignUp(){\r\n        document.getElementById(\"Succeful\").hidden=\"false\";\r\n        fetch(\"/SignUp\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({newuser:user,newpassword:password}),\r\n          })\r\n            .then((r) => r.json())\r\n            .then((data) => {\r\n              console.log(data)\r\n            });\r\n            console.log(newuser,newpassword);\r\n            document.getElementById(\"Succeful\").hidden=\"false\";\r\n    }\r\n\r\n\r\n    return (<div>\r\n        <input type=\"text\" onChange={(e) => {\r\n        Setuser(e.target.value);}}></input>\r\n        <input type=\"password\" onChange={(e) => {\r\n        Setpassword(e.target.value);}}></input>\r\n        <button onClick={LogIn}>Log in</button>\r\n        <input type=\"text\" onChange={(e) => {\r\n        SetNewuser(e.target.value);}}></input>\r\n        <input type=\"password\" onChange={(e) => {\r\n        SetNewpassword(e.target.value);}}></input>\r\n        <button onClick={SignUp}>Sign Up</button>\r\n        <label id=\"Succeful\">Sign Up Succesfuly</label>\r\n    </div>)\r\n}\r\n\r\nexport default HomePage;","import './App.css';\r\n//import React, { useState, useEffect } from \"react\";\r\nimport Home from './components/HomePage';\r\n//import Lottery from './components/Lottery';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n\r\n \r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav className='all-tabs'>\r\n          <ul>\r\n            <li className='active-nav'>\r\n              <Link to=\"/\">Add Candidate</Link>\r\n            </li>\r\n            <li className='non-active-nav'>\r\n              <Link to=\"/about\">Lottery</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/lottery\">\r\n            \r\n          </Route>\r\n          <Route path=\"/\">\r\n\r\n            <Home  />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}