{"version":3,"sources":["components/GreetingForm.js","components/RandomGreeting.js","App.js","reportWebVitals.js","index.js"],"names":["GreetingForm","useState","massage","state","confirmMassage","setConfirmMassage","id","onSubmit","e","preventDefault","greetingImageSrc","target","elements","value","greetingText","fetch","method","headers","body","JSON","stringify","then","r","json","data","document","getElementById","reset","console","log","success","err","setTimeout","type","placeholder","name","className","RandomGreeting","greeting","setGreeting","onClick","res","text","src","alt","App","tagName","toLowerCase","parentNode","querySelectorAll","forEach","tab","classList","remove","add","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.19287d50.chunk.js","sourcesContent":["import './GreetingForm.css';\r\nimport { useState } from 'react';\r\n\r\nfunction GreetingForm() {\r\n    const [confirmMassage, setConfirmMassage] = useState({ massage: '', state: false });\r\n\r\n    function addGreeting(e) {\r\n        e.preventDefault();\r\n        setConfirmMassage({ massage: confirmMassage, state: false });\r\n        let greetingImageSrc = e.target.elements.greetingImageSrc.value,\r\n            greetingText = e.target.elements.greetingText.value;\r\n        fetch('/add-greeting', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            },\r\n            body: JSON.stringify({ greetingText, greetingImageSrc })\r\n        })\r\n            .then(r => r.json())\r\n            .then(data => {\r\n                document.getElementById(\"myForm\").reset();\r\n                console.log(data)\r\n                let massage = data.success ? 'The Greeting Was Added Successfully' :\r\n                    (data.err ? data.err : 'Something went wrong! try again later');\r\n                setConfirmMassage({ massage: massage, state: true });\r\n                setTimeout(() => {\r\n                    setConfirmMassage({ massage: '', state: false });\r\n                }, 7000);\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <form id='myForm' onSubmit={addGreeting}>\r\n            <div>\r\n                <label > Enter Greeting Text:</label >\r\n                <input type='text' placeholder='greeting text' name='greetingText' />\r\n            </div>\r\n            <div>\r\n                <label > Enter Greeting Image:</label >\r\n                <input type='text' placeholder='image URL' name='greetingImageSrc' />\r\n            </div>\r\n            <div>\r\n                <button type='submit'> Add Greeting</button>\r\n            </div>\r\n            {confirmMassage.state ? <div className='confim-massage'> <h2> {confirmMassage.massage}</h2></div> : ''}\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nexport default GreetingForm;","\r\nimport './RandomGreeting.css'\r\nimport { useState } from 'react';\r\n\r\nfunction RandomGreeting() {\r\n    const [greeting, setGreeting] = useState({ greetingText: '', greetingImageSrc: '' });\r\n\r\n    function getRandomGreeting() {\r\n        fetch('/get-one-random-greeting')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.err) {\r\n                    console.log(`error: ${res.err}`);\r\n                    return;\r\n                }\r\n                setGreeting({ greetingText: res.data.text, greetingImageSrc: res.data.src });\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div>\r\n                <button className='get-random-greeting' onClick={getRandomGreeting}> Get Random Greeting! </button>\r\n            </div>\r\n            <div className='greeting-display'>\r\n                <h1> {greeting.greetingText} </h1>\r\n                <img alt='' src={greeting.greetingImageSrc} />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default RandomGreeting;","import './App.css';\r\nimport GreetingForm from './components/GreetingForm';\r\nimport RandomGreeting from './components/RandomGreeting';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n\r\n  function toggleClassName(e) {\r\n    if (e.target.tagName.toLowerCase() !== 'a') {\r\n      e.target = e.target.parentNode;\r\n    }\r\n    let allTabs = document.querySelectorAll('nav>ul>a');\r\n    allTabs.forEach(tab => tab.classList.remove('active-nav'));\r\n    e.target.classList.add('active-nav');\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <nav className='all-tabs' >\r\n        <ul onClick={toggleClassName}>\r\n          <Link className='nav active-nav' to=\"/\">\r\n            <li>\r\n              Greeting Form\r\n          </li>\r\n          </Link>\r\n          <Link className='nav' to=\"/random-greeting\">\r\n            <li>\r\n              Get Random Greeting\r\n            </li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n\r\n      {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n      <Switch>\r\n        <Route path=\"/random-greeting\">\r\n          <RandomGreeting />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <GreetingForm />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}