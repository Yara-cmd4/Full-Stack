{"version":3,"sources":["components/CatCard/CatCard.js","App.js","reportWebVitals.js","index.js"],"names":["CatCard","props","data","info","Card","style","width","Img","variant","src","imgSrc","Body","Title","name","Text","age","App","useState","kittens","setKittens","useEffect","fetch","then","r","json","className","onSubmit","e","preventDefault","target","children","value","method","headers","body","JSON","stringify","console","log","type","placeholder","filter","map","kitten","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAuBeA,MAlBf,SAAiBC,GACf,IAAMC,EAAOD,EAAME,KACnB,OACE,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACE,cAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAKP,EAAKQ,SAClC,eAACN,EAAA,EAAKO,KAAN,WACE,cAACP,EAAA,EAAKQ,MAAN,UAAaV,EAAKW,OAClB,eAACT,EAAA,EAAKU,KAAN,oBACSZ,EAAKa,cCoEPC,MA5Ef,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,KA8Cb,OA3CAC,qBAAU,WACRC,MAAM,gBACHC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACpB,GAAD,OAAUiB,EAAWjB,EAAKgB,cACjC,IAwCD,sBAAKO,UAAU,MAAf,UACE,uBAAMC,SAnBV,SAAsBC,GACpBA,EAAEC,iBACF,IAAMf,EAAOc,EAAEE,OAAOC,SAASjB,KAAKkB,MAC9BhB,EAAMY,EAAEE,OAAOC,SAASf,IAAIgB,MAC5BrB,EAASiB,EAAEE,OAAOC,SAASpB,OAAOqB,MACxCJ,EAAEE,OAAOC,SAASjB,KAAKkB,MAAQ,GAC/BV,MAAM,oBAAqB,CACzBW,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEvB,KAAMA,EAAME,IAAKA,EAAKL,OAAQA,MAEpDY,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACpB,GAAD,OAAUmC,QAAQC,IAAIpC,OAK5B,UACE,uBAAOqC,KAAK,OAAOC,YAAY,cAAc3B,KAAK,SAClD,uBAAO0B,KAAK,OAAOC,YAAY,aAAa3B,KAAK,QACjD,uBAAO0B,KAAK,OAAOC,YAAY,eAAe3B,KAAK,WACnD,uBAAO0B,KAAK,SAASC,YAAY,UAGnC,sBAAMd,SA9CV,SAAsBC,GACpBA,EAAEC,iBACF,IAAMa,EAASd,EAAEE,OAAOC,SAASW,OAAOV,MACzB,KAAXU,EACFpB,MAAM,qBAAsB,CAC1BW,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEK,aAEtBnB,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACpB,GAAD,OAAUiB,EAAWjB,EAAKgB,YAElCG,MAAM,gBACHC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACpB,GAAD,OAAUiB,EAAWjB,EAAKgB,aA8BlC,SACE,uBACEqB,KAAK,OACLC,YAAY,8BACZ3B,KAAK,aAGT,8BACGK,EAAQwB,KAAI,SAACC,EAAQC,GACpB,OACE,gCACE,4BAAgBD,EAAO9B,MAAf+B,GACR,cAAC,EAAD,CAASzC,KAAMwC,MAFPC,YC1DPC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.07d6ce72.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./CatCard.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nfunction CatCard(props) {\r\n  const data = props.info;\r\n  return (\r\n    <Card style={{ width: \"18rem\" }}>\r\n      <Card.Img variant=\"top\" src={data.imgSrc} />\r\n      <Card.Body>\r\n        <Card.Title>{data.name}</Card.Title>\r\n        <Card.Text>\r\n          Age = {data.age}\r\n          {/* {data.desc}\r\n        {data.img}\r\n        {data.id} */}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CatCard;\r\n","import \"./App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CatCard from \"./components/CatCard/CatCard\";\r\n\r\n//import components\r\nfunction App() {\r\n  const [kittens, setKittens] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/get-kittens\")\r\n      .then((r) => r.json())\r\n      .then((data) => setKittens(data.kittens));\r\n  }, []);\r\n\r\n  function handleFilter(e) {\r\n    e.preventDefault();\r\n    const filter = e.target.children.filter.value;\r\n    if (filter !== \"\") {\r\n      fetch(\"/get-kitten-filter\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ filter }),\r\n      })\r\n        .then((r) => r.json())\r\n        .then((data) => setKittens(data.kittens));\r\n    } else {\r\n      fetch(\"/get-kittens\")\r\n        .then((r) => r.json())\r\n        .then((data) => setKittens(data.kittens));\r\n    }\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const name = e.target.children.name.value;\r\n    const age = e.target.children.age.value;\r\n    const imgSrc = e.target.children.imgSrc.value;\r\n    e.target.children.name.value = \"\";\r\n    fetch(\"/send-kitten-name\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name: name, age: age, imgSrc: imgSrc }),\r\n    })\r\n      .then((r) => r.json())\r\n      .then((data) => console.log(data));\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" placeholder=\"kitten name\" name=\"name\"></input>\r\n        <input type=\"text\" placeholder=\"kitten age\" name=\"age\"></input>\r\n        <input type=\"text\" placeholder=\"kitten image\" name=\"imgSrc\"></input>\r\n        <input type=\"submit\" placeholder=\"su\"></input>\r\n      </form>\r\n\r\n      <form onSubmit={handleFilter}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"search for Kitty name , age\"\r\n          name=\"filter\"\r\n        ></input>\r\n      </form>\r\n      <div>\r\n        {kittens.map((kitten, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <p key={index}>{kitten.name}</p>\r\n              <CatCard info={kitten} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}