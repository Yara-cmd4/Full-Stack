{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","credit","setCredit","products","id","price","image","status","handleSubmit","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","setState","postId","console","log","useEffect","r","className","map","product","index","src","alt","onClick","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAmEeA,MAhEf,WAAgB,IAAD,EACeC,qBADf,mBACNC,EADM,KACEC,EADF,KAGTC,EAAW,CAAC,CAAEC,GAAI,EAAGC,MAAO,GAAIC,MAAO,4GAA6GC,QAAQ,GAChK,CAAEH,GAAI,EAAGC,MAAO,GAAIC,MAAO,4GAA6GC,QAAQ,GAChJ,CAAEH,GAAI,EAAGC,MAAO,GAAIC,MAAO,4GAA6GC,QAAQ,IAWhJ,SAASC,EAAaH,GAAQ,IAAD,OACrBI,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAACb,OAAQ,QAEhCc,MAAM,cAAeN,GACpBO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEC,OAAQF,EAAKf,QAC3CkB,QAAQC,IAAIlB,GAId,OAtBAmB,qBAAU,WACRT,MAAM,eACHC,MAAK,SAAAS,GAAC,OAAIA,EAAEP,UACZF,MAAK,SAAAG,GACJG,QAAQC,IAAIJ,GACZjB,EAAUiB,QAEb,IAgBD,sBAAKO,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SACE,yCAAYzB,OAEd,qBAAKyB,UAAU,eAAf,SACGvB,EAASwB,KAAI,SAACC,EAASC,GAAV,OACZ,sBAAKH,UAAU,UAAf,UACE,4BAAIE,EAAQvB,QACZ,qBAAKyB,IAAKF,EAAQtB,MAAOyB,IAAI,KAC7B,wBAAQC,QAAS,kBAAMxB,EAAa,KAApC,yBAKN,sBAAKkB,UAAU,OAAf,UACGvB,EAAS8B,QAAO,SAAAL,GAAO,OAAuB,IAAnBA,EAAQrB,UAAiBoB,KAAI,SAACC,EAASC,GAAV,OACvD,sBAAKH,UAAU,UAAf,UACE,4BAAIE,EAAQvB,QACZ,qBAAKyB,IAAKF,EAAQtB,MAAOyB,IAAI,KAC7B,wBAAQC,QAASxB,EAAa,IAA9B,uBAGJ,8BACA,wBAAQwB,QAAS,kBAAMxB,EAAa,KAApC,sBAGF,qBAAKkB,UAAU,MAAf,SACE,sDAAyBzB,WChDlBiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8752a36a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [credit, setCredit] = useState();\n\n  let products = [{ id: 1, price: 30, image: 'https://icons-for-free.com/iconfiles/png/512/christmas+gift+gift+box+present+icon-1320184382640199846.png', status: false },\n  { id: 2, price: 20, image: 'https://icons-for-free.com/iconfiles/png/512/christmas+gift+gift+box+present+icon-1320184382640199846.png', status: true },\n  { id: 3, price: 10, image: 'https://icons-for-free.com/iconfiles/png/512/christmas+gift+gift+box+present+icon-1320184382640199846.png', status: false }]\n\n  useEffect(() => {\n    fetch('/get-credit')\n      .then(r => r.json())\n      .then(data => {\n        console.log(data);\n        setCredit(data);\n      })\n  }, [])\n\n  function handleSubmit(price) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({credit: '30'})\n    };\n    fetch('/set-credit', requestOptions)\n    .then(response => response.json())\n    .then(data => this.setState({ postId: data.id }));\n    console.log(price);\n    //setCredit(price);\n  }\n\n  return (\n    <div className=\"Home\">\n      <div className='Credit'>\n        <p>Credit: {credit}</p>\n      </div>\n      <div className=\"ProductsList\">\n        {products.map((product, index) => (\n          <div className='Product'>\n            <p>{product.price}</p>\n            <img src={product.image} alt=''></img>\n            <button onClick={() => handleSubmit(30)}>Add</button>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"Cart\">\n        {products.filter(product => product.status === true).map((product, index) => (\n          <div className='Product'>\n            <p>{product.price}</p>\n            <img src={product.image} alt=''></img>\n            <button onClick={handleSubmit(30)}>Add</button>\n          </div>\n        ))}\n        <div>\n        <button onClick={() => handleSubmit(30)}>Pay</button>\n        </div>\n      </div>\n      <div className=\"Pay\">\n        <p>Total sum available: {credit}</p>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}