{"version":3,"sources":["components/BookCard/BookCard.js","App.js","reportWebVitals.js","index.js"],"names":["BookCard","props","data","info","Card","style","width","Img","variant","src","img","Body","Title","name","Text","author","year","App","useState","books","setBooks","bookAdded","setbookAdded","foundBooks","setfoundBooks","deleted","setdeleted","useEffect","fetch","then","r","json","console","log","ID","Math","random","toString","substr","submitBookToServer","e","a","preventDefault","target","children","value","book","axios","post","response","error","alert","searchBookInDB","txt","search","id","method","Home","onSubmit","type","placeholder","map","index","onClick","deleteBook","_id","Find","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b21d75fd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./BookCard.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nfunction BookCard(props) {\r\n  const data = props.info;\r\n\r\n  return (\r\n    <Card style={{ width: \"18rem\" }}>\r\n      <Card.Img variant=\"top\" src={data.img} />\r\n      <Card.Body>\r\n        <Card.Title>{data.name}</Card.Title>\r\n        <Card.Text>\r\n          author : {data.author}\r\n          <br />\r\n          year : {data.year}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default BookCard;\r\n","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport BookCard from \"./components/BookCard/BookCard\";\r\n\r\nfunction App() {\r\n  // Home Page Book map\r\n  const [books, setBooks] = useState([]);\r\n  // To show A message (Conditional Rendering)\r\n  const [bookAdded, setbookAdded] = useState(false);\r\n  // Find Page Book map\r\n  const [foundBooks, setfoundBooks] = useState(books);\r\n  // Re render BookMap ( used in useEffect)\r\n  const [deleted, setdeleted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/book/get_books\")\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setBooks(data.books);\r\n      });\r\n  }, [deleted]);\r\n\r\n  // Generate Random Id for Photos\r\n  var ID = function () {\r\n    return Math.random().toString(36).substr(2, 9);\r\n  };\r\n\r\n  async function submitBookToServer(e) {\r\n    e.preventDefault();\r\n    const name = e.target.children.name.value;\r\n    const author = e.target.children.author.value;\r\n    const year = e.target.children.year.value;\r\n    const img = `https://picsum.photos/200?random=${ID()}`;\r\n    const book = { name, author, year, img };\r\n\r\n    axios\r\n      .post(\"/book/add_book\", {\r\n        book,\r\n      })\r\n      .then(\r\n        (response) => {\r\n          console.log(response.data.book);\r\n          console.log(books);\r\n          setBooks([...books, response.data.book]);\r\n          setbookAdded(true);\r\n          // alert(\"Book was Added to Db\");\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          alert(\"Error :Something went wrong\");\r\n        }\r\n      );\r\n    e.target.children.name.value = \"\";\r\n    e.target.children.author.value = \"\";\r\n    e.target.children.year.value = \"\";\r\n  }\r\n\r\n  async function searchBookInDB(e) {\r\n    e.preventDefault();\r\n\r\n    const txt = e.target.children.search.value;\r\n\r\n    axios\r\n      .post(\"/book/find_books\", {\r\n        txt,\r\n      })\r\n      .then(\r\n        (response) => {\r\n          console.log(response.data.books);\r\n          setfoundBooks(response.data.books);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          alert(\"Error :Something went wrong\");\r\n        }\r\n      );\r\n\r\n    e.target.children.search.value = \"\";\r\n  }\r\n\r\n  async function deleteBook(id) {\r\n    console.log(id);\r\n    const response = await fetch(`/book/delete_book/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    console.log(response);\r\n    // for UseEffect\r\n    setdeleted(!deleted);\r\n    return response.json();\r\n  }\r\n\r\n  function Home() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={submitBookToServer}>\r\n          <input type=\"text\" placeholder=\"Add Book Name\" name=\"name\"></input>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add Book Author\"\r\n            name=\"author\"\r\n          ></input>\r\n          <input type=\"text\" placeholder=\"Add Book Year\" name=\"year\"></input>\r\n          <input type=\"submit\" placeholder=\"su\"></input>\r\n        </form>\r\n        {bookAdded === true ? <div> Ok </div> : null}\r\n        <div>\r\n          {books.map((book, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <BookCard info={book} />\r\n                <button\r\n                  onClick={() => {\r\n                    deleteBook(book._id);\r\n                  }}\r\n                >\r\n                  Delete Me !{\" \"}\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function Find() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={searchBookInDB}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search Book by Name Year Author\"\r\n            name=\"search\"\r\n          ></input>\r\n          <input type=\"submit\" placeholder=\"su\"></input>\r\n        </form>\r\n        <div>\r\n          {foundBooks.map((book, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <BookCard info={book} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <div>\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/find\">Find</Link>\r\n              </li>\r\n              {/* <li>\r\n                <Link to=\"/users\">Users</Link>\r\n              </li> */}\r\n            </ul>\r\n          </nav>\r\n\r\n          <div>\r\n            <Link to=\"/find\">\r\n              <button type=\"button\">Find Screen</button>\r\n            </Link>\r\n            <Link to=\"/\">\r\n              <button type=\"button\">Home Screen</button>\r\n            </Link>\r\n          </div>\r\n\r\n          {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route path=\"/Home\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/find\">\r\n              <Find />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}